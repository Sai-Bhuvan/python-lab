import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Read data from the result file
file_path = 'results.csv'  # Replace 'results.csv' with your file path
results_data = pd.read_csv(file_path)  # For Excel, use pd.read_excel()

results_data = results_data.iloc[:, 1:7]
results_data

# Calculate pass and fail counts for each subject and overall
pass_fail_data = {}
subjects = results_data.columns[1 : 7]  # Assuming first column is student names/id
subjects

for subject in subjects:
    pass_count = sum(results_data[subject] >= 35)
    fail_count = sum(results_data[subject] < 35)
    pass_fail_data[subject] = {'Pass': pass_count, 'Fail': fail_count}
    
pass_fail_data

# Visualizations
# Scatter Plot
plt.figure(figsize=(8, 6))
sns.scatterplot(x='Maths', y='Science', data=results_data)
plt.title('Scatter Plot: Math vs Science')
plt.xlabel('Maths')
plt.ylabel('Science')
plt.show()

# Line Chart
plt.figure(figsize=(8, 6))
results_data.mean().plot(kind='line')
plt.title('Line Chart: Average Marks by Subject')
plt.xlabel('Subjects')
plt.ylabel('Average Marks')
# plt.xticks(rotation=45)
plt.show()

# Bar Chart
pass_fail_df = pd.DataFrame(pass_fail_data).transpose()
pass_fail_df.plot(kind='bar', stacked=True, figsize=(10, 6))
plt.title('Bar Chart: Pass/Fail Count by Subject and Overall')
plt.xlabel('Subjects')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.legend(title='Result')
plt.show()

# Histogram
plt.figure(figsize=(8, 6))
sns.histplot(results_data['Maths'], bins=10, kde=True)
plt.title('Histogram: Math Marks Distribution')
plt.xlabel('Maths Marks')
plt.ylabel('Frequency')
plt.show()

results_data['Science'].mean()









# by typing the dataset
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Manually input the dataset
data_dict = {
    'Hindi': [65, 94, 7, 88, 39, 51, 73],
    'English': [10, 56, 85, 46, 81, 43, 48],
    'Science': [59, 4, 76, 59, 37, 14, 6],
    'Maths': [3, 67, 99, 94, 38, 53, 38],
    'History': [71, 91, 60, 52, 6, 64, 50],
    'Geography': [37, 50, 25, 38, 54, 59, 21],
    'Total': [245, 362, 352, 377, 255, 284, 236],
    'Results': [0, 1, 0, 1, 1, 1, 0],
    'Div': [3, 1, 2, 1, 3, 2, 3]
}

# Create a DataFrame
data = pd.DataFrame(data_dict)

# Count the number of pass and fail for each subject
pass_fail_count = {}
subjects = ['Hindi', 'English', 'Science', 'Maths', 'History', 'Geography']

for subject in subjects:
    pass_count = len(data[data[subject] >= 40])
    fail_count = len(data[data[subject] < 40])
    pass_fail_count[subject] = {'Pass': pass_count, 'Fail': fail_count}

# Analyze overall result
overall_pass_count = len(data[data['Results'] == 1])
overall_fail_count = len(data[data['Results'] == 0])

# Visualize output
# Bar chart for pass/fail count in each subject
pass_fail_df = pd.DataFrame(pass_fail_count)
pass_fail_df.plot(kind='bar', stacked=True)
plt.title('Pass/Fail Count in Each Subject')
plt.xlabel('Subjects')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Pie chart for overall pass/fail count
plt.figure(figsize=(8, 6))
plt.pie([overall_pass_count, overall_fail_count], labels=['Pass', 'Fail'], autopct='%1.1f%%', startangle=140)
plt.title('Overall Pass/Fail Percentage')
plt.axis('equal')
plt.show()
